@model ClinicX.ViewModels.DictatedLetterVM
@{
    ViewData["Title"] = "Clinic-X - Edit Dictated Letter";
}

<div class="container">
    <div class=" row mb-5 g-5">
        <div class="col-md-2">
            <a type="button" class="btn btn-default btn-success" asp-controller="DictatedLetter" asp-action="Index">Back to Dictated Letters Index</a>
        </div>
        <div class="col-md-2">
            <input type="button" class="btn btn-default btn-success" value="Save" id="btnSaveLetter" />
        </div>    
        <div class="col-md-2">
            <form id="DictatedLetterApproval" asp-action="Approve">
                <input asp-for="dictatedLetters.DoTID" name="iDID" hidden="true" />
                <input type="button" class="btn btn-default btn-success" value="Approve" id="btnApprove" hidden="true" />
            </form>
            <form id="DictatedLetterUnapproval" asp-action="Unapprove">
                <input asp-for="dictatedLetters.DoTID" name="iDID" hidden="true" />
                <input type="button" class="btn btn-default btn-success" value="Unapprove" id="btnUnapprove" hidden="true" />
            </form>
        </div>    
        <div class="col-md-2">
            <form id="DictatedLetterDelete" asp-action="Delete">
                <input asp-for="dictatedLetters.DoTID" name="iDID" hidden="true" />
                <input type="button" class="btn btn-default btn-success" value="Delete" id="btnReqDelete" />
                <div class="row mb-1 g-1" id="ConfDelete" hidden="true">
                    <h6>Are you sure? You won't be able to undo this.</h6>
                    <input type="button" class="btn btn-default btn-success" value="Yes" id="btnDelete"  />
                    <input type="button" class="btn btn-default btn-success" value="No" id="btnNoDelete"  />
                </div>
            </form>
        </div>
        <div class="col-md-2">
            <a type="button" class="btn btn-default btn-success" asp-controller="Patient" asp-action="PatientDetails" asp-route-id=@Model.patientDetails.MPI>Patient Details</a>
        </div>
        <div class="col-md-2">
            <a id="btnEDMS" class="btn btn-default btn-success" href="" target="_blank">EDMS (GEMR)</a>
        </div>
    </div>

    <h1>Dictated Letter For @Html.ValueFor(model => model.patientDetails.FIRSTNAME) @Html.ValueFor(model => model.patientDetails.LASTNAME)</h1>

    <h2>Re: @Html.ValueFor(model => model.dictatedLetters.LetterRe)</h2>

    <div class="container mb-5">
        <form id="Preview" asp-action="PreviewDOT">
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <button type="button" class="btn btn-success" id="btnPreview">Preview</button>
                </div>
            </div>
            <div hidden="true">
                <input asp-for="dictatedLetters.DoTID" name="iDID" />                
            </div>
        </form>

        <form id="DictatedLetter" asp-action="Edit">
            <div id="metadata" hidden="true">
                <input asp-for="dictatedLetters.DoTID" name="iDID" />
                <input id="txtisAddressChanged" name="isAddresseeChanged" />
            </div>

            

            <div class="row mb-5 g-5">
                <div class="col-md-1" style="text-align:right">
                    To:
                </div>
                <div class="col-md-2">
                    <div class="row">
                        <select class="w-100" id="ddlLetterTo">
                            <option value="" selected>Select...</option>
                            <option value="Patient">Patient</option>
                            <option value="Relative">Relative</option>
                            @if (Model.activityDetails.REF_FAC != Model.patientDetails.GP_Code)
                            {
                                <option value="Referrer">Referrer</option>                            
                            }
                            <option value="GP">GP</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="row">
                        <select class="w-100" id="ddlLetterToType" hidden="true">
                            <option value="Screening Coordinator">Screening Coordinator</option>
                            <option value="Genetics Lab">Genetics Lab</option>
                            <option value="Histopathologist">Histopathologist</option>
                            <option value="Consultant Geneticist">Consultant Geneticist</option>
                        </select>
                    </div>
                    <div class="row">
                        <select class="w-100" id="ddlLetterToClinician" hidden="true">
                            @foreach(var item in Model.clinicians)
                            {
                                <option value=@item.MasterClinicianCode>@item.TITLE @item.FIRST_NAME @item.NAME</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <textarea id="txtLetterTo" rows="8" cols="40" asp-for="dictatedLetters.LetterTo" name="sLetterTo"></textarea>
                </div>
                <div class="col-md-1" style="text-align:right">
                    From:
                </div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlLetterFrom" asp-for=@Model.dictatedLetters.LetterFromCode>
                        <option value="">Select...</option>                    
                        @foreach(var item in Model.staffMemberList)
                        {
                            <option value=@item.STAFF_CODE>@item.NAME</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <textarea id="txtLetterFrom" rows="8" cols="40" asp-for="dictatedLetters.LetterFrom" name="sLetterFrom"></textarea>
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2" style="text-align:right">
                    Letter Status:
                </div>
                <div class="col-md-4">
                    <select class="w-100" id="ddlLetterStatus" asp-for="dictatedLetters.Status" name="sStatus">
                        <option value="" selected></option>
                        <option value="Draft">Draft</option>
                        <option value="For Approval">For Approval</option>
                        <option value="For Corrections">For Corrections</option>
                        <option id="optPrint" value="For Printing">For Printing</option>
                        <option id="optICP" value="ICP Draft">ICP Draft</option>
                    </select>
                </div>
                <div class="col-md-6"></div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2" style="text-align:right">Summary:</div>
                <div class="col-md-10">
                    <textarea id="txtLetterContentBold" rows="10" cols="80" asp-for="dictatedLetters.LetterContentBold" name="sLetterContentBold"></textarea>
                </div>
                <div class="col-md-2"></div>
            </div>

            <div class="row mb-5">
                <div class="col-md-1" style="text-align:right">Secreterial Team:</div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlSecTeam" asp-for=@Model.dictatedLetters.SecTeam name="sSecTeam">
                        <option value="">Select...</option>
                        @foreach (var item in Model.secteams)
                        {
                            <option value=@item>@item</option>
                        }
                    </select>
                </div>
                <div class="col-md-1" style="text-align:right">Consultant:</div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlConsultant" asp-for=@Model.dictatedLetters.Consultant name="sConsultant">
                        @foreach(var item in Model.consultants)
                        {
                            <option value=@item>@item</option>
                        }
                    </select>
                </div>
                <div class="col-md-1" style="text-align:right">Genetic Counsellor:</div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlGC" asp-for=@Model.dictatedLetters.GeneticCounsellor name="sGC">
                        @foreach (var item in Model.gcs)
                        {
                            <option value=@item>@item</option>
                        }
                    </select>
                </div>
                <div class="col-md-1" style="text-align:right">Date Dictated:</div>
                <div class="col-md-2">
                    <input class="w-100" id="txtDateDictated" type=date asp-for=@Model.dictatedLetters.DateDictated name="sDateDictated" />
                </div>
            </div>

            <div class="row mb-5">
                <div class="col-md-2" style="text-align:right">Content:</div>
                <div class="col-md-10">
                    <textarea id="txtLetterContent" rows="40" cols="200" asp-for="dictatedLetters.LetterContent" name="sLetterContent" hidden="true"></textarea>
                    <div style="border:solid" class="col-md-10" id="letterText" contenteditable="true">
                        @Html.Raw(@Model.dictatedLetters.LetterContent)
                    </div>
                </div>
            </div>
            <div class="row mb-5">
            
            </div>       
        </form>

        <div class="row mb-5 g-5">
            <button class="btn btn-default btn-success" data-bs-toggle="collapse" data-bs-target="#collapsePatientsTable" aria-expanded="false" aria-controls="collapseExample">Patients</button>
        </div>

        <div class="collapse" id="collapsePatientsTable">
            <form id="frmAddPatientToDOT" asp-action="AddPatientToDOT">
                <input asp-for="dictatedLetters.DoTID" name="iDID" hidden="true" />
                <input id="txtPID" name="iPID" hidden="true" />
                <table class="table">
                    <thead>
                        <tr>
                            <th></th>
                            <th>CGU Number</th>
                            <th>Name</th>
                            <th>DOB</th>
                            <th>NHS Number</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.patients)
                        {
                            <tr>
                                <td><input type="submit" ID=@item.MPI value="Add Patient" class="btn btn-default btn-sm btn-success" onclick="AddToDOT(@item.MPI)" /></td>
                                <td>@item.CGU_No</td>
                                <td>@item.FIRSTNAME @item.LASTNAME</td>
                                <td>@item.DOB.Value.ToString("dd/MM/yyyy")</td>
                                <td>@item.SOCIAL_SECURITY</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </form>
        </div>
    
        <div class="row mb-5 g-5">
            <button class="btn btn-default btn-success" data-bs-toggle="collapse" data-bs-target="#collapseCopiesTable" aria-expanded="false" aria-controls="collapseExample">CCs</button>
        </div>

        <div class="collapse" id="collapseCopiesTable">
            <h3>CCs currently added to letter:</h3>
            <div class="row mb-5 g-5">
                <form id="frmDeleteCC" asp-action="DeleteCCFromDOT">                
                    <input id="txtCCID" name="iID" hidden="true" />
                    <table class="table">
                        <thead>
                            <tr>
                                <th>CC Address</th>   
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.dictatedLettersCopies)
                            {                        
                                <tr>
                                    <td>@item.CC</td>
                                    <td>
                                        <input type="button" id=@item.CC value="Delete" class="btn btn-default btn-sm btn-success" onclick="DeleteCC(@item.CCID)" />
                                    </td>
                                </tr>                        
                            }
                        </tbody>
                    </table>
                </form>
            </div>
            <form id="frmAddCCToDOT" asp-action="AddCCToDOT">
                <input asp-for="dictatedLetters.DoTID" name="iDID" hidden="true"/>
                <div class="row mb-5 g-5">            
                    <div class="col-md-2">
                        <input type="button" id="btnAddCC" class="btn btn-default btn-success" value="Add CC" />
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <select class="w-100" id="ddlCCType">
                                <option value="" selected>Select...</option>
                                <option value="Patient">Patient</option>
                                <option value="Relative">Relative</option>
                                @if (Model.activityDetails.REF_FAC != Model.patientDetails.GP_Code)
                                {
                                    <option value="Referrer">Referrer</option>
                                }
                                <option value="GP">GP</option>
                                <option value="Other">Other</option>
                            </select>                    
                            <select id="ddlCC" hidden="true">            
                                @foreach (var item in Model.clinicians)
                                {
                                    <option value=@item.MasterClinicianCode>@item.TITLE @item.FIRST_NAME @item.NAME, @item.SPECIALITY</option>
                                }
                            </select>
                        </div>
                        <div class="row">
                            <div class="col-md-10">
                                <textarea rows="8" cols="40" id="txtCC"></textarea>
                            </div>
                            <div class="col-md-2">
                                <input type="text" id="txtCCCode" name="sCC" hidden="true"/>
                            </div>
                        </div>
                    </div>            
                </div>
                
            </form>
        </div>
    </div>
</div>


<script type="text/javascript">
    
    document.getElementById("btnSaveLetter").addEventListener("click", SaveLetter);
    document.getElementById("btnApprove").addEventListener("click", ApproveLetter);
    document.getElementById("btnUnapprove").addEventListener("click", UnapproveLetter);
    document.getElementById("btnDelete").addEventListener("click", DeleteLetter);
    document.getElementById("btnReqDelete").addEventListener("click", ShowDelete);
    document.getElementById("btnNoDelete").addEventListener("click", CancelDelete);
    document.getElementById("ddlLetterTo").addEventListener("change", SetLetterTo);
    document.getElementById("ddlLetterFrom").addEventListener("change", SetLetterFrom);
    document.getElementById("ddlLetterToClinician").addEventListener("change", SetLetterToClinician);
    document.getElementById("ddlLetterToType").addEventListener("change", ShowLetterToClinician);
    document.getElementById("ddlCCType").addEventListener("change", ShowCCClinician);    
    document.getElementById("btnAddCC").addEventListener("click", AddCC);
    document.getElementById("btnPreview").addEventListener("click", DoPreview);
    window.addEventListener("load", LoadLetter);
    window.addEventListener("load", LoadEDMSLink);

    function LoadEDMSLink() 
    {
        document.getElementById("btnEDMS").href = "http://cg-live-164/Clinical_Genetics/#cg_pedigree_folder/folders%2Fcg_pedigree_folder%2F" + "@(Model.patientDetails.DCTM_Folder_ID)" + "/cg_view_pedigree_patie";
    }

    

    function LoadLetter() 
    { 
        
        if (document.getElementById("ddlLetterStatus").value == "For Approval") 
        {
            document.getElementById("btnApprove").hidden = false;
            document.getElementById("ddlLetterStatus").disabled = true;            
        }
        else if (document.getElementById("ddlLetterStatus").value == "For Printing") 
        {
            document.getElementById("btnUnapprove").hidden = false;
            document.getElementById("ddlLetterStatus").disabled = true;
            document.getElementById("txtLetterTo").disabled = true;
            document.getElementById("txtLetterFrom").disabled = true;
            document.getElementById("txtLetterContentBold").disabled = true;
            document.getElementById("ddlLetterTo").disabled = true;
            document.getElementById("ddlLetterFrom").disabled = true;
            document.getElementById("letterText").contentEditable = false;
        }
        else
        {
            document.getElementById("optPrint").hidden = true;
            if (document.getElementById("ddlLetterStatus").value == "ICP Draft") 
            { 
                document.getElementById("ddlLetterStatus").value = "Draft";
                document.getElementById("optICP").hidden = true;
            }
        }    
        document.getElementById("txtisAddressChanged").value = "false";
    }

    function SaveLetter() 
    {        
        document.getElementById("txtLetterContent").value = document.getElementById("letterText").innerHTML.trim();
        //we have to enable them or it won't pass the parameters to the function
        document.getElementById("ddlLetterStatus").disabled = false;     
        if (CheckFormValid())
        {
            document.getElementById("DictatedLetter").submit();
        }
        //we can't do C# validation because there's simply no way to display the message,
        //because the only way to refresh the page wipes everything!!
    }

    function ApproveLetter()
    {     
        document.getElementById("DictatedLetterApproval").submit();        
        
        document.getElementById("btnApprove").hidden = true;
        document.getElementById("btnUnapprove").hidden = false;
        document.getElementById("ddlLetterStatus").disabled = false;
        document.getElementById("optPrint").hidden = false;
        document.getElementById("ddlLetterStatus").value = "For Printing";
        document.getElementById("ddlLetterStatus").disabled = true;
        document.getElementById("txtLetterTo").disabled = true;
        document.getElementById("txtLetterFrom").disabled = true;
        document.getElementById("txtLetterContentBold").disabled = true;        
    }

    function UnapproveLetter() 
    {        
        document.getElementById("DictatedLetterUnapproval").submit();
        
        document.getElementById("btnApprove").hidden = false;
        document.getElementById("btnUnapprove").hidden = true;
        document.getElementById("ddlLetterStatus").disabled = false;
        document.getElementById("ddlLetterStatus").value = "For Approval";
        document.getElementById("optPrint").hidden = true;
        document.getElementById("ddlLetterStatus").disabled = true;
        document.getElementById("txtLetterTo").disabled = false;
        document.getElementById("txtLetterFrom").disabled = false;
        document.getElementById("txtLetterContentBold").disabled = false;     
    }

    function ShowDelete()
    {
        //window.alert("bleh");
        document.getElementById("ConfDelete").hidden = false;
        document.getElementById("btnReqDelete").hidden = true;
    }

    function DeleteLetter()
    {       
        document.getElementById("DictatedLetterDelete").submit();
    }

    function CancelDelete()
    {
        document.getElementById("ConfDelete").hidden = true;
        document.getElementById("btnReqDelete").hidden = false;
    }

    function SetLetterTo() 
    {         
        const sLetterTo = document.getElementById("ddlLetterTo").value;
                
        var sName = "";
        var sFacility = "";
        var sAddress = "";        

        if (sLetterTo == "Patient") 
        {   
            sName = "@Model.patientDetails.FIRSTNAME" + " " + "@Model.patientDetails.LASTNAME";
            sAddress = "@Model.patientDetails.ADDRESS1" + "\n" + 
                        "@Model.patientDetails.ADDRESS2" + "\n" +
                        "@Model.patientDetails.ADDRESS3" + "\n" +
                        "@Model.patientDetails.ADDRESS4" + "\n" +
                        "@Model.patientDetails.POSTCODE";
        }
        if (sLetterTo == "GP")
        {
            sName = "@Model.patientDetails.GP";
            sAddress = "@Model.GPFacility.NAME" + "\n" +
                        "@Model.GPFacility.ADDRESS" + "\n" +
                        "@Model.GPFacility.CITY" + "\n" +
                        "@Model.GPFacility.STATE" + "\n" +
                        "@Model.GPFacility.ZIP";
        }
        if (sLetterTo == "Referrer")
        {
            sName = "@Model.referrer.TITLE" + " " + "@Model.referrer.FIRST_NAME" + " " + "@Model.referrer.NAME";
            sAddress = "@Model.referrerFacility.NAME" + "\n" +
                        "@Model.referrerFacility.ADDRESS" + "\n" +
                        "@Model.referrerFacility.CITY" + "\n" +
                        "@Model.referrerFacility.STATE" + "\n" +
                        "@Model.referrerFacility.ZIP";
        }
        
        if (sLetterTo == "Other") 
        {            
            document.getElementById("ddlLetterToType").hidden = false;
        }
        else
        {
            document.getElementById("ddlLetterToClinician").hidden = true;
            document.getElementById("ddlLetterToType").hidden = true;
            document.getElementById("txtLetterTo").value = sName.replace(/&#x27;/g, "'") + "\n" + sAddress.replace(/&amp;/g, "&").replace(/&#xD;&#xA;/g, "\n").replace(/&#x27;/g, "'");
            document.getElementById("txtisAddressChanged").value = "true";
        }        
    }

    function ShowLetterToClinician()
    {
        document.getElementById("ddlLetterToClinician").hidden = false;
    }

    function ShowCCClinician() 
    {
        if (document.getElementById("ddlCCType").value != "Other")
        {
            SetCCAddress(document.getElementById("ddlCCType").value);
        }
        else
        {
            document.getElementById("ddlCC").hidden = false;
        }
        
    }

    function SetLetterToClinician() 
    { 
        const sClinCode = document.getElementById("ddlLetterToClinician").value;
        
        var sClinCodeArray = [];
        var sNameArray = [];
        var sFacCodeArray = [];
        var sFacilityArray = [];
        var sAddressArray = [];
        var sName = "Nobody";
        var sFacility = "Nothing";
        var sAddress = "Nowhere";
        @foreach (var item in Model.clinicians)
        {
            @:sClinCodeArray.push("@item.MasterClinicianCode");
            @:sNameArray.push("@item.TITLE @item.FIRST_NAME @item.NAME");
            @:sFacilityArray.push("@item.FACILITY");
        }

        @foreach (var item in Model.facilities)
        {
            @:sFacCodeArray.push("@item.MasterFacilityCode");
            @:sAddressArray.push("@item.NAME" + "\n" + "@item.ADDRESS" + "\n" + "@item.CITY" + "\n" + "@item.ZIP");
        }

        for (i in sNameArray) 
        {            
            if (sClinCodeArray[i] == sClinCode) {
                sName = sNameArray[i];
                sFacility = sFacilityArray[i];                
            }
        }

        for (i in sFacilityArray) 
        {
            if (sFacCodeArray[i] == sFacility) 
            {
                sAddress = sAddressArray[i];
            }
        }
        document.getElementById("txtLetterTo").value = sName + "\n" + sAddress.replace(/&amp;/g, "&").replace(/&#xD;&#xA;/g, "\n").replace(/&#x27;/g, "'");
        document.getElementById("txtisAddressChanged").value = "true";
    }

    function SetLetterFrom() 
    {
        const sStaffCode = document.getElementById("ddlLetterFrom").value;
        var sStaffCodeArray = [];
        var sStaffNameArray = [];
        var sStaffPositionArray = [];
        var sStaffName = "";
        var sStaffPosition = "";
        //we can't simply get the data directly from the model and use it in a Where, 
        // so we have to use this dumb method!
        @foreach (var item in Model.staffMemberList)
        {
            @:sStaffCodeArray.push("@item.STAFF_CODE");
            @:sStaffNameArray.push("@item.NAME");
            @:sStaffPositionArray.push("@item.POSITION");
        }

        for(i in sStaffCodeArray)
        {
             if(sStaffCodeArray[i] == sStaffCode)
             {
                 sStaffName = sStaffNameArray[i];
                 sStaffPosition = sStaffPositionArray[i];
             }
        }
        
        document.getElementById("txtLetterFrom").value = sStaffName + "\n" + sStaffPosition;
        document.getElementById("txtisAddressChanged").value = "true";
    }

    function SetCCAddress(ccCode) 
    { 
        var sName = "Nobody";
        var sFacility = "Nothing";
        var sAddress = "Nowhere";

        if (ccCode == "Referrer") 
        {
            sName = "@Model.referrer.TITLE" + " " + "@Model.referrer.FIRST_NAME" + " " + "@Model.referrer.NAME";
            sAddress = "@Model.referrerFacility.NAME" + "\n" +
                "@Model.referrerFacility.ADDRESS" + "\n" +
                "@Model.referrerFacility.CITY" + "\n" +
                "@Model.referrerFacility.STATE" + "\n" +
                "@Model.referrerFacility.ZIP";

            document.getElementById("txtCCCode").value = "@Model.referrer.MasterClinicianCode";
        }
        else if (ccCode == "Patient")
        {
            sName = "@Model.patientDetails.Title" + " " + "@Model.patientDetails.FIRSTNAME" + " " + "@Model.patientDetails.LASTNAME";
            sAddress = "@Model.patientDetails.ADDRESS1" + "\n" +
                "@Model.patientDetails.ADDRESS2" + "\n" +
                "@Model.patientDetails.ADDRESS3" + "\n" +
                "@Model.patientDetails.ADDRESS4" + "\n" +
                "@Model.patientDetails.POSTCODE";

            document.getElementById("txtCCCode").value = "Patient";
        }
        else if (ccCode == "GP")
        {
            sName = "@Model.patientDetails.GP"
            sAddress = "@Model.GPFacility.NAME" + "\n" +
                "@Model.GPFacility.ADDRESS" + "\n" +
                "@Model.GPFacility.CITY" + "\n" +
                "@Model.GPFacility.STATE" + "\n" +
                "@Model.GPFacility.ZIP";

            document.getElementById("txtCCCode").value = "@Model.patientDetails.GP_Code";
        }

        else 
        { 
            sName = "Someone";
            //sFacility = "Bleh";
            sAddress = "Some place";
        }

        document.getElementById("txtCC").value = sName + "\n" + sAddress.replace("&#x27;", "'").replace("&#xD;&#xA;", " ");
    }

    function AddToDOT(id) 
    {        
        document.getElementById("txtPID").value = id;        
        document.getElementById("frmAddPatientToDOT").submit();
    }

    function AddCC()
    {   
        document.getElementById("frmAddCCToDOT").submit();
    }

    function DeleteCC(id) {
        document.getElementById("txtCCID").value = id;
        document.getElementById("frmDeleteCC").submit();
    }

    function CheckFormValid() 
    {
        //gotta protect against those SQL injections!
        if (document.getElementById("txtLetterContent").value.match(/};.*/)) 
        {
            window.alert("Oi! Stop trying to inject SQL code into my form!");
            return 0;
        }
        if (document.getElementById("txtLetterContentBold").value == "") 
        {
            window.alert("Please enter a summary.")        
            return 0;
        }
        if (document.getElementById("txtLetterContent").value == "") 
        { 
            window.alert("Please enter some text.")
            return 0;
        }
        if (document.getElementById("ddlSecTeam").value == "") 
        {
            window.alert("Please select a secreterial team.")
            return 0;
        }
        if (document.getElementById("ddlConsultant").value == "") 
        {
            window.alert("Please select a consultant.")
            return 0;
        }        
        if (document.getElementById("ddlGC").value == "") 
        {
            window.alert("Please select a GC.")
            return 0;
        }
        if (document.getElementById("txtLetterTo").value == "") 
        {
            window.alert("Please choose a recipient.")
            return 0;
        }
        if (document.getElementById("txtLetterFrom").value == "") 
        {
            window.alert("Please choose a sender.")
            return 0;
        }
        if (document.getElementById("txtDateDictated").value == "") 
        {
            window.alert("Please specify a dictated date.")
            return 0;
        }
        return 1;
    }

    function DoPreview()
    {
        //window.alert("Boink");
        document.getElementById("Preview").submit();
    }


</script>


@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
            }