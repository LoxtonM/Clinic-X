@model ClinicX.ViewModels.ReviewVM

@{
    ViewData["Title"] = "ClinicX - New Review";
    ViewData["Page"] = "/ Review / Add New";
    ViewData["HomeBtn"] = Html.ActionLink("Home Page", "Index", "Home", new { }, new { @class = "btn btn-success m-1" });
}

@{
    ViewBag.HomeButton = new[]
    {
        Html.ActionLink("Patient Details", "PatientDetails", "Patient", new { id=Model.patient.MPI }, new { @class = "btn btn-success m-1" }),
        Html.ActionLink("Back to Reviews Index", "Index", "Review", new {  }, new { @class = "btn btn-success m-1" }),
        
    };
}

<div class="container card">
    
    <div class="row mb-5 g-2">
        <h1>Review for <a asp-controller="Patient" asp-action="PatientDetails" asp-route-id=@Html.ValueFor(model => model.patient.MPI)>@Html.DisplayFor(model => model.patient.FIRSTNAME) @Html.DisplayFor(model => model.patient.LASTNAME)</a></h1>
    </div>

    <div>
        <form id="ReviewForm" asp-action="Create">
            <div class="row mb-5 g-5">
                <div id="meta" hidden>
                    <input asp-for=@Model.patient.MPI name ="mpi" />
                    <input asp-for=@Model.referral.RefID name="refID" />
                    <input asp-for=@Model.referral.PATHWAY name="pathway" />
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <label>Category:</label>
                </div>
                <div class="col-md-2">
                    <select class="w-100" name="category">
                        <option value="standard">Standard</option>
                        <option value="Non-standard">Non-standard</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label>Planned Date:</label>
                </div>
                <div class="col-md-2">
                    <input class="w-100" type="date" name="revDate" />
                </div>
                <div class="col-md-2">
                    <label>Review Recipient: (leave blank if the review is for yourself)</label>
                </div>
                <div class ="col-md-2">
                    <select class="w-100" name="recipient">
                        <option value=""></option>
                        @foreach (var item in Model.staffMembers)
                        {
                            <option value=@item.STAFF_CODE>@item.NAME</option>
                        }
                    </select>                
                </div>
            </div>
            <div class="row mb-5 g-5">
               <div class="col-md-2">
                    <label>Details:</label>
                </div>
                <div class="col-md-10">
                    <textarea rows="8" cols="40" name="comments" id="txtComments"></textarea>
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <button type="button" class="btn btn-default btn-outline-success" id="btnSave">Save</button>
                </div>
                <div class="col-md-2"></div>
            </div>
        </form>
    </div>
</div>

<script>

    document.getElementById("btnSave").addEventListener("click", DoSubmit);    

    function DoSubmit()
    {
        if (CheckFormValid() == 1) 
        {
            document.getElementById("ReviewForm").submit();
        }
    }    

    function CheckFormValid() 
    {        
        if (document.getElementById("txtComments").value.match(/};.*/)) {
            window.alert("Oi! Stop trying to inject SQL code into my form!");
            return 0;
        }
        return 1;
    }

</script>

