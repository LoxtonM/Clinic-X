@model ClinicX.Models.Reviews
@{
    ViewData["Title"] = "Clinic-X - Review Details";
}

<div class="container">
    <div class="row mb-5 g-5">
        @*<input type="button" value="Back" id="btnBack" class="btn btn-default btn-success" />*@
        <div class="col-md-2">
            <a class="btn btn-default btn-success" asp-controller="Review" asp-action="Index">Back to Reviews Index</a>
        </div>
        <div class="col-md-1">
            <a class="btn btn-default btn-success" asp-controller="Patient" asp-action="PatientDetails" asp-route-id=@Html.ValueFor(model => model.MPI)>Patient Details</a>
        </div>
        <div class="col-md-9"></div>
    </div>

    <div class="row mb-5 g-5">
        <h1>Review for <a asp-controller="Patient" asp-action="PatientDetails" asp-route-id=@Html.ValueFor(model => model.MPI)>@Html.DisplayFor(model => model.FIRSTNAME) @Html.DisplayFor(model => model.LASTNAME)</a></h1>
    </div>

    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CGU_No):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CGU_No)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Planned_Date):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Planned_Date)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Category):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Category)
            </dd>
            @if (Model.Owner != Model.Recipient)
            {
                <dt class="col-sm-2">
                    Owner/Requester:
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Owner)
                </dd>
            }
            @if (@Html.ValueFor(model => model.RecipientLogin).ToString().ToUpper() != @Html.ViewContext.HttpContext.User.Identity.Name.ToString().ToUpper())
            {
                <dt class="col-sm-2">
                    Recipient:
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Recipient)
                </dd>
            }
        </dl>

        <form id="ReviewForm" asp-action="Edit">
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <label>Date Completed: (leave blank to use today's date)</label>
                </div>
                <div class="col-md-2">
                    <input class="w-100" id="txtDateComplete" asp-for=@Model.Completed_Date name="sDate" />
                </div>
                <div class="col-md-2">
                    <label>Status:</label>
                </div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlComplete" asp-for=@Model.Review_Status name="sStatus">
                        <option value="Pending">Pending</option>
                        <option value="Complete">Complete</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <input class="w-100" asp-for=@Model.ReviewID name="id" hidden="true" />
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <label>Comments:</label>
                </div>
                <div class="col-md-10">
                    <textarea rows="8" cols="40" asp-for=@Model.Comments name="sComments" id="txtComments"></textarea>
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <button type="button" class="btn btn-default btn-success" id="btnSave">Save</button>
                </div>
                <div class="col-md-2"></div>
            </div>
        </form>
    </div>
</div>

<script>

    document.getElementById("btnSave").addEventListener("click", DoSubmit);
    document.getElementById("ddlComplete").addEventListener("change", CompleteReview);

    function DoSubmit()
    {
        if (CheckFormValid() == 1) 
        {
            document.getElementById("ReviewForm").submit();
        }
    }

    function CompleteReview()
    {        
        if (document.getElementById("ddlComplete").value == "Complete") 
        {
            
            if (document.getElementById("txtDateComplete").value == "") {
                
                var today = new Date();
                //window.alert(today.getFullYear() + "-" + (today.getMonth() + 1) + "-" + ("0" + today.getDate()).slice(-2));
                document.getElementById("txtDateComplete").value = today.getFullYear() + "-" + (today.getMonth() + 1) + "-" + ("0" + today.getDate()).slice(-2);
                
            }
            //window.alert(document.getElementById("txtDateComplete").value);
        }    
    }

    function CheckFormValid() 
    {
        //gotta protect against those SQL injections!
        if (document.getElementById("txtComments").value.match(/};.*/)) {
            window.alert("Oi! Stop trying to inject SQL code into my form!");
            return 0;
        }
        return 1;
    }

</script>

