@model ClinicX.ViewModels.ReviewVM

@{
    ViewData["Title"] = "ClinicX - Review Details";
    ViewData["Page"] = "/ Review / Edit";
    ViewData["HomeBtn"] = Html.ActionLink("Home Page", "Index", "Home", new { }, new { @class = "btn btn-success m-1" });
}

@{
    ViewBag.HomeButton = new[]
    {
        Html.ActionLink("Patient Details", "PatientDetails", "Patient", new { id=Model.patient.MPI }, new { @class = "btn btn-success m-1" }),
        Html.ActionLink("Back to Reviews Index", "Index", "Review", new {  }, new { @class = "btn btn-success m-1" }),

    };
}

<div class="container card">
    
    <div class="row mb-5 g-5">
        <h1>Review for <a asp-controller="Patient" asp-action="PatientDetails" asp-route-id=@Model.patient.MPI>@Model.patient.FIRSTNAME @Model.patient.LASTNAME</a></h1>
    </div>

    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.patient.CGU_No):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.review.CGU_No)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.review.Planned_Date):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.review.Planned_Date) @if(Model.daysToReview > 0)
                {
                    <span>(due in @Model.daysToReview days)</span>
                }
                else
                {
                    <span>(@Model.daysOverdue days overdue)</span>
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.review.Category):
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.review.Category)
            </dd>
            @if (Model.review.Owner != Model.review.Recipient)
            {
                <dt class="col-sm-2">
                    Owner/Requester:
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.review.Owner)
                </dd>
            }
            @if (@Html.ValueFor(model => model.review.RecipientLogin).ToString().ToUpper() != @Html.ViewContext.HttpContext.User.Identity.Name.ToString().ToUpper())
            {
                <dt class="col-sm-2">
                    Recipient:
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.review.Recipient)
                </dd>
            }
        </dl>

        <form id="ReviewForm" asp-action="Edit">
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <label>Date Completed: (leave blank to use today's date)</label>
                </div>
                <div class="col-md-2">
                    <input class="w-100" id="txtDateComplete" asp-for=@Model.review.Completed_Date name="revDate" />
                </div>
                <div class="col-md-2">
                    <label>Status:</label>
                </div>
                <div class="col-md-2">
                    <select class="w-100" id="ddlComplete" asp-for=@Model.review.Review_Status name="status">
                        <option value="Pending">Pending</option>
                        <option value="Complete">Complete</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <input class="w-100" asp-for=@Model.review.ReviewID name="id" hidden="true" />
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2">
                    <label>Comments:</label>
                </div>
                <div class="col-md-10">
                    <textarea rows="8" cols="40" asp-for=@Model.review.Comments name="comments" id="txtComments"></textarea>
                </div>
            </div>
            <div class="row mb-5 g-5">
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <button type="button" class="btn btn-default btn-success" id="btnSave">Save</button>
                </div>
                <div class="col-md-2"></div>
            </div>
        </form>
    </div>
</div>

<script>

    document.getElementById("btnSave").addEventListener("click", DoSubmit);
    document.getElementById("ddlComplete").addEventListener("change", CompleteReview);

    function DoSubmit()
    {
        if (CheckFormValid() == 1) 
        {
            document.getElementById("ReviewForm").submit();
        }
    }

    function CompleteReview()
    {        
        if (document.getElementById("ddlComplete").value == "Complete") 
        {
                
            if (document.getElementById("txtDateComplete").value == "") 
            {                
                var today = new Date();                                
                //document.getElementById("txtDateComplete").value = today.getFullYear() + "-" + (today.getMonth() + 1) + "-" + ("0" + today.getDate()).slice(-2);
                document.getElementById("txtDateComplete").value = today.getFullYear() + "-" + (("0" + (today.getMonth()+1))).slice(-2) + "-" + ("0" + today.getDate()).slice(-2);
                
            }
            //window.alert(document.getElementById("txtDateComplete").value);
        }    
    }

    function CheckFormValid() 
    {
        //gotta protect against those SQL injections!
        if (document.getElementById("txtComments").value.match(/};.*/)) 
        {
            window.alert("Oi! Stop trying to inject SQL code into my form!");
            return 0;
        }
        return 1;
    }

</script>

